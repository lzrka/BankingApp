package com.greenfoxacademy.bankingbackofficebackendservice.models;

import com.fasterxml.jackson.annotation.JsonBackReference;
import io.swagger.annotations.ApiModelProperty;
import java.util.Currency;
import java.util.Random;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.experimental.SuperBuilder;

@Entity
@Getter
@Setter
@SuperBuilder(toBuilder = true)
@NoArgsConstructor
@Table(name = "account")
@SuppressWarnings("JpaDataSourceORMInspection")
public class Account extends BankApplicationProperty {

  @ApiModelProperty(value = "accountnumber of the account", dataType = "String", notes = "accountNumber should be automatically generated by generateAccountNumber")
  @Column(nullable = false, unique = true, length = 24)
  private String accountNumber = Account.generateAccountNumber();

  @ManyToOne
  @JoinColumn(name = "client_id")
  @JsonBackReference
  @NotNull
  private Client client;

  @ApiModelProperty(value = "type of currency the account uses", dataType = "Currency")
  @Column(nullable = false)
  @NotNull
  private Currency currency = Currency.getInstance("HUF");

  @ApiModelProperty(value = "amount of currency stored on the account", dataType = "Long", notes = "default value should be 1000")
  @Column(nullable = false)
  private Long value = 1000L;

  public static String generateAccountNumber() {
    StringBuilder str = new StringBuilder();
    Random random = new Random();
    for (int i = 0; i < 24; i++) {
      str.append(random.nextInt(10));
    }
    return str.toString();
  }
}
